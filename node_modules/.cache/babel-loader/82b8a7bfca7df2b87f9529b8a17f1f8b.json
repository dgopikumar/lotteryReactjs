{"ast":null,"code":"var _jsxFileName = \"D:\\\\BlockChain\\\\Udemy-BlockChain Codes\\\\lottery-react\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport web3 from './web3';\nimport lottery from './lottery';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  console.log(web3.version);\n  const [manager, setManager] = useState('');\n  const [account, setAccount] = useState('');\n  const [totPlayers, setTotPlayers] = useState(0);\n  const [totLotteryAmt, setTotLotteryAmt] = useState(0); //const[amtEntered, setAmtEntered] = useState(0);\n\n  const [message, setMessage] = useState('');\n  const amtInputRef = useRef(0);\n  useEffect(() => {\n    const GetData = async () => {\n      const lcl_accounts = await web3.eth.getAccounts();\n      const lcl_manager = await lottery.methods.manager().call();\n      const players = await lottery.methods.getPlayers().call();\n      const balance = await web3.eth.getBalance(lottery.options.address);\n      setManager(lcl_manager);\n      setAccount(lcl_accounts[0]);\n      setTotPlayers(players.length);\n      setTotLotteryAmt(balance);\n      console.log('manager:');\n      console.log(manager);\n      console.log('account:');\n      console.log(account);\n      console.log('totPlayers:');\n      console.log(totPlayers);\n      console.log('totLotteryAmt:');\n      console.log(totLotteryAmt);\n    };\n\n    GetData();\n  });\n\n  const submitHandler = e => {\n    e.preventDefault();\n    const enteredValue = amtInputRef.current.value;\n    setMessage('waiting on transaction success...');\n    lottery.methods.enter().send({\n      from: account,\n      value: web3.utils.toWei(enteredValue, 'ether')\n    }).then(() => {\n      setMessage('you have been entered!');\n    });\n  };\n  /*const setData = async () => {\n    console.log('waiting for tx success:');\n    const accounts = await web3.eth.getAccounts();\n    console.log(accounts[0]);\n    await lottery.methods.enter().send({from: accounts[0], value: web3.utils.toWei('.011','ether')});\n    console.log('you have been entered!');\n  }*/\n  //const GetData = async () => {\n\n  /*const lcl_accounts = await web3.eth.getAccounts();\n  const lcl_manager = await lottery.methods.manager().call();\n  setManager(lcl_manager);\n  setAccount(lcl_accounts[0]);*/\n  //const players = await lottery.methods.getPlayers().call();\n  //const balance = await web3.eth.getBalance(lottery.options.address);\n\n  /*console.log('manager:');\n  console.log(lcl_manager);\n  console.log('account:');\n  console.log(lcl_accounts[0]);*/\n\n  /*console.log('players:');\n  console.log(players.length);\n  console.log('balance:');\n  console.log(balance);*/\n  //}\n  //setData();\n  //GetData();\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Lottery contract\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"This contract is managed by : \", manager, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" There are currently \", totPlayers, \" people entered, competing to win \", totLotteryAmt, \" ether!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Want to try your luck ?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"amt\",\n          children: \"Amount of ether to enter:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"amt\",\n          ref: amtInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 5\n        }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Try it\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"2yhlk/NJRD8P7/sWWA9yu3ESVgA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","web3","lottery","App","console","log","version","manager","setManager","account","setAccount","totPlayers","setTotPlayers","totLotteryAmt","setTotLotteryAmt","message","setMessage","amtInputRef","GetData","lcl_accounts","eth","getAccounts","lcl_manager","methods","call","players","getPlayers","balance","getBalance","options","address","length","submitHandler","e","preventDefault","enteredValue","current","value","enter","send","from","utils","toWei","then"],"sources":["D:/BlockChain/Udemy-BlockChain Codes/lottery-react/src/App.js"],"sourcesContent":["import React, {useState,useEffect,useRef} from 'react';\nimport web3 from './web3';\nimport lottery from './lottery';\n\nfunction App() {\n  console.log(web3.version);\n  const[manager, setManager] = useState('');\n  const[account, setAccount] = useState('');\n  const[totPlayers, setTotPlayers] = useState(0);\n  const[totLotteryAmt, setTotLotteryAmt] = useState(0);\n  //const[amtEntered, setAmtEntered] = useState(0);\n  const[message,setMessage] = useState('');\n  const amtInputRef = useRef(0);\n\nuseEffect( () => {\n  const GetData = async () => {\n    const lcl_accounts = await web3.eth.getAccounts();\n    const lcl_manager = await lottery.methods.manager().call();\n    const players = await lottery.methods.getPlayers().call();\n    const balance = await web3.eth.getBalance(lottery.options.address);\n    setManager(lcl_manager);\n    setAccount(lcl_accounts[0]);\n    setTotPlayers(players.length);\n    setTotLotteryAmt(balance);\n\n    console.log('manager:');\n    console.log(manager);\n    console.log('account:');\n    console.log(account);\n    console.log('totPlayers:');\n    console.log(totPlayers);\n    console.log('totLotteryAmt:');\n    console.log(totLotteryAmt);\n  }\n  GetData();\n});\n\nconst submitHandler = (e) => {\n  e.preventDefault();\n  const enteredValue = amtInputRef.current.value;\n  setMessage('waiting on transaction success...');\n  lottery.methods.enter().send({from: account, value: web3.utils.toWei(enteredValue,'ether')}).then(() => {\n    setMessage('you have been entered!');\n  });\n}\n\n/*const setData = async () => {\n  console.log('waiting for tx success:');\n  const accounts = await web3.eth.getAccounts();\n  console.log(accounts[0]);\n  await lottery.methods.enter().send({from: accounts[0], value: web3.utils.toWei('.011','ether')});\n  console.log('you have been entered!');\n}*/\n  //const GetData = async () => {\n    /*const lcl_accounts = await web3.eth.getAccounts();\n    const lcl_manager = await lottery.methods.manager().call();\n    setManager(lcl_manager);\n    setAccount(lcl_accounts[0]);*/\n\n    //const players = await lottery.methods.getPlayers().call();\n    //const balance = await web3.eth.getBalance(lottery.options.address);\n\n    /*console.log('manager:');\n    console.log(lcl_manager);\n    console.log('account:');\n    console.log(lcl_accounts[0]);*/\n\n    /*console.log('players:');\n    console.log(players.length);\n    console.log('balance:');\n    console.log(balance);*/\n  //}\n\n  //setData();\n  //GetData();\n\n  return(\n    <div>\n    <h2>Lottery contract</h2>\n    <p>This contract is managed by : {manager} </p>\n    <p> There are currently {totPlayers} people entered, competing to win {totLotteryAmt} ether!</p>\n\n    <form onSubmit={submitHandler}>\n    <h4>Want to try your luck ?</h4>\n    <div>\n    <label htmlFor=\"amt\">Amount of ether to enter:</label>\n    <input type=\"number\" id=\"amt\" ref={amtInputRef}></input>\n    &nbsp;\n    <button>Try it</button>\n    </div>\n    </form>\n\n    <h3>{message}</h3>\n    </div>\n  );\n}\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}