{"ast":null,"code":"var _jsxFileName = \"D:\\\\BlockChain\\\\Udemy-BlockChain Codes\\\\lottery-react\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport web3 from './web3';\nimport lottery from './lottery';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  console.log(web3.version);\n  const [manager, setManager] = useState('');\n  const [account, setAccount] = useState('');\n  const [totPlayers, setTotPlayers] = useState(0);\n  const [totLotteryAmt, setTotLotteryAmt] = useState(0);\n  useEffect(() => {\n    const GetData = async () => {\n      const lcl_accounts = await web3.eth.getAccounts();\n      const lcl_manager = await lottery.methods.manager().call();\n      const players = await lottery.methods.getPlayers().call();\n      const balance = await web3.eth.getBalance(lottery.options.address);\n      setManager(lcl_manager);\n      setAccount(lcl_accounts[0]);\n      setTotPlayers(players.length);\n      setTotLotteryAmt(balance);\n      console.log('manager:');\n      console.log(manager);\n      console.log('account:');\n      console.log(account);\n    };\n\n    GetData();\n  });\n  /*const setData = async () => {\n    console.log('waiting for tx success:');\n    const accounts = await web3.eth.getAccounts();\n    console.log(accounts[0]);\n    await lottery.methods.enter().send({from: accounts[0], value: web3.utils.toWei('.011','ether')});\n    console.log('you have been entered!');\n  }*/\n  //const GetData = async () => {\n\n  /*const lcl_accounts = await web3.eth.getAccounts();\n  const lcl_manager = await lottery.methods.manager().call();\n  setManager(lcl_manager);\n  setAccount(lcl_accounts[0]);*/\n  //const players = await lottery.methods.getPlayers().call();\n  //const balance = await web3.eth.getBalance(lottery.options.address);\n\n  /*console.log('manager:');\n  console.log(lcl_manager);\n  console.log('account:');\n  console.log(lcl_accounts[0]);*/\n\n  /*console.log('players:');\n  console.log(players.length);\n  console.log('balance:');\n  console.log(balance);*/\n  //}\n  //setData();\n  //GetData();\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Lottery contract\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"This contract is managed by : \", manager, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" There are currently \", totPlayers, \" people entered, competing to win \", totLotteryAmt, \" ether!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"qRISeOADMV9ef1NYZw9ZO1wuIsU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","web3","lottery","App","console","log","version","manager","setManager","account","setAccount","totPlayers","setTotPlayers","totLotteryAmt","setTotLotteryAmt","GetData","lcl_accounts","eth","getAccounts","lcl_manager","methods","call","players","getPlayers","balance","getBalance","options","address","length"],"sources":["D:/BlockChain/Udemy-BlockChain Codes/lottery-react/src/App.js"],"sourcesContent":["import React, {useState,useEffect} from 'react';\nimport web3 from './web3';\nimport lottery from './lottery';\n\nfunction App() {\n  console.log(web3.version);\n  const[manager, setManager] = useState('');\n  const[account, setAccount] = useState('');\n  const[totPlayers, setTotPlayers] = useState(0);\n  const[totLotteryAmt, setTotLotteryAmt] = useState(0);\n\nuseEffect( () => {\n  const GetData = async () => {\n    const lcl_accounts = await web3.eth.getAccounts();\n    const lcl_manager = await lottery.methods.manager().call();\n    const players = await lottery.methods.getPlayers().call();\n    const balance = await web3.eth.getBalance(lottery.options.address);\n    setManager(lcl_manager);\n    setAccount(lcl_accounts[0]);\n    setTotPlayers(players.length);\n    setTotLotteryAmt(balance);\n\n    console.log('manager:');\n    console.log(manager);\n    console.log('account:');\n    console.log(account);\n  }\n  GetData();\n});\n\n/*const setData = async () => {\n  console.log('waiting for tx success:');\n  const accounts = await web3.eth.getAccounts();\n  console.log(accounts[0]);\n  await lottery.methods.enter().send({from: accounts[0], value: web3.utils.toWei('.011','ether')});\n  console.log('you have been entered!');\n}*/\n  //const GetData = async () => {\n    /*const lcl_accounts = await web3.eth.getAccounts();\n    const lcl_manager = await lottery.methods.manager().call();\n    setManager(lcl_manager);\n    setAccount(lcl_accounts[0]);*/\n\n    //const players = await lottery.methods.getPlayers().call();\n    //const balance = await web3.eth.getBalance(lottery.options.address);\n\n    /*console.log('manager:');\n    console.log(lcl_manager);\n    console.log('account:');\n    console.log(lcl_accounts[0]);*/\n\n    /*console.log('players:');\n    console.log(players.length);\n    console.log('balance:');\n    console.log(balance);*/\n  //}\n\n  //setData();\n  //GetData();\n\n  return(\n    <div>\n    <h2>Lottery contract</h2>\n    <p>This contract is managed by : {manager} </p>\n    <p> There are currently {totPlayers} people entered, competing to win {totLotteryAmt} ether!</p>\n    </div>\n  );\n}\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,SAAxB,QAAwC,OAAxC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACbC,OAAO,CAACC,GAAR,CAAYJ,IAAI,CAACK,OAAjB;EACA,MAAK,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,EAAD,CAArC;EACA,MAAK,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,EAAD,CAArC;EACA,MAAK,CAACY,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,CAAC,CAAD,CAA3C;EACA,MAAK,CAACc,aAAD,EAAgBC,gBAAhB,IAAoCf,QAAQ,CAAC,CAAD,CAAjD;EAEFC,SAAS,CAAE,MAAM;IACf,MAAMe,OAAO,GAAG,YAAY;MAC1B,MAAMC,YAAY,GAAG,MAAMf,IAAI,CAACgB,GAAL,CAASC,WAAT,EAA3B;MACA,MAAMC,WAAW,GAAG,MAAMjB,OAAO,CAACkB,OAAR,CAAgBb,OAAhB,GAA0Bc,IAA1B,EAA1B;MACA,MAAMC,OAAO,GAAG,MAAMpB,OAAO,CAACkB,OAAR,CAAgBG,UAAhB,GAA6BF,IAA7B,EAAtB;MACA,MAAMG,OAAO,GAAG,MAAMvB,IAAI,CAACgB,GAAL,CAASQ,UAAT,CAAoBvB,OAAO,CAACwB,OAAR,CAAgBC,OAApC,CAAtB;MACAnB,UAAU,CAACW,WAAD,CAAV;MACAT,UAAU,CAACM,YAAY,CAAC,CAAD,CAAb,CAAV;MACAJ,aAAa,CAACU,OAAO,CAACM,MAAT,CAAb;MACAd,gBAAgB,CAACU,OAAD,CAAhB;MAEApB,OAAO,CAACC,GAAR,CAAY,UAAZ;MACAD,OAAO,CAACC,GAAR,CAAYE,OAAZ;MACAH,OAAO,CAACC,GAAR,CAAY,UAAZ;MACAD,OAAO,CAACC,GAAR,CAAYI,OAAZ;IACD,CAdD;;IAeAM,OAAO;EACR,CAjBQ,CAAT;EAmBA;AACA;AACA;AACA;AACA;AACA;AACA;EACE;;EACE;AACJ;AACA;AACA;EAEI;EACA;;EAEA;AACJ;AACA;AACA;;EAEI;AACJ;AACA;AACA;EACE;EAEA;EACA;;EAEA,oBACE;IAAA,wBACA;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADA,eAEA;MAAA,6CAAkCR,OAAlC;IAAA;MAAA;MAAA;MAAA;IAAA,QAFA,eAGA;MAAA,oCAAyBI,UAAzB,wCAAuEE,aAAvE;IAAA;MAAA;MAAA;MAAA;IAAA,QAHA;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAOD;;GA/DQV,G;;KAAAA,G;AAgET,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}